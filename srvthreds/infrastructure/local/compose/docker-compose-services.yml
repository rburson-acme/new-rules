services:
  # Builder image - contains compiled thredlib and srvthreds artifacts
  # This is built first and reused by all other services for faster builds
  srvthreds-builder:
    build:
      context: ../../../
      dockerfile: infrastructure/local/dockerfiles/Dockerfile.builder
      additional_contexts:
        thredlib: ../../../../thredlib
    image: srvthreds-builder:latest
    container_name: srvthreds-builder
    command: ["/bin/true"]  # No-op, this is just for building
    restart: "no"

  # Command runner for environment setup
  srvthreds-bootstrap:
    build:
      context: ../../../../
      dockerfile: srvthreds/infrastructure/local/dockerfiles/Dockerfile.cmdRunner
      args:
        BUILDER_IMAGE: srvthreds-builder:latest
    container_name: srvthreds-bootstrap
    command: ["npm", "run", "bootstrap", "--", "-p", "ef-detection"]
    environment:
      - NODE_ENV=development
      - MONGO_HOST=${MONGO_HOST:-mongo-repl-1:27017}
      - REDIS_HOST=${REDIS_HOST:-redis:6379}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    restart: "no"  # Run once and exit
    networks:
      - srvthreds-net
    depends_on:
      srvthreds-builder:
        condition: service_completed_successfully

  # SrvThreds Engine Service
  srvthreds-engine:
    build:
      context: ../../../../
      dockerfile: srvthreds/infrastructure/local/dockerfiles/Dockerfile
      args:
        BUILDER_IMAGE: srvthreds-builder:latest
    container_name: srvthreds-engine
    command: ["node", "/app/dist-server/index.js", "-d"]
    ports:
      - "8082:8082"  # Expose engine to host
    depends_on:
      srvthreds-builder:
        condition: service_completed_successfully
      srvthreds-bootstrap:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=development
      - MONGO_HOST=${MONGO_HOST:-mongo-repl-1:27017}
      - REDIS_HOST=${REDIS_HOST:-redis:6379}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    restart: unless-stopped
    networks:
      - srvthreds-net
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.2'

  # SrvThreds Session Agent
  srvthreds-session-agent:
    build:
      context: ../../../../
      dockerfile: srvthreds/infrastructure/local/dockerfiles/Dockerfile
      args:
        BUILDER_IMAGE: srvthreds-builder:latest
    container_name: srvthreds-session-agent
    ports:
      - '3000:3000'
    entrypoint: ["node", "/app/dist-server/agent/agent.js"]
    command: ["-c", "session_agent", "-i", "org.wt.session1", "-d"]
    depends_on:
      srvthreds-builder:
        condition: service_completed_successfully
      srvthreds-bootstrap:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=development
      - MONGO_HOST=${MONGO_HOST:-mongo-repl-1:27017}
      - REDIS_HOST=${REDIS_HOST:-redis:6379}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    restart: unless-stopped
    networks:
      - srvthreds-net
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'

  # SrvThreds Persistence Agent
  srvthreds-persistence-agent:
    build:
      context: ../../../../
      dockerfile: srvthreds/infrastructure/local/dockerfiles/Dockerfile
      args:
        BUILDER_IMAGE: srvthreds-builder:latest
    container_name: srvthreds-persistence-agent
    command: ["node", "/app/dist-server/agent/agent.js", "-c", "persistence_agent", "-d"]
    depends_on:
      srvthreds-builder:
        condition: service_completed_successfully
      srvthreds-bootstrap:
        condition: service_completed_successfully
    environment:
      - NODE_ENV=development
      - MONGO_HOST=${MONGO_HOST:-mongo-repl-1:27017}
      - REDIS_HOST=${REDIS_HOST:-redis:6379}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
    restart: unless-stopped
    networks:
      - srvthreds-net
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.4'
        reservations:
          memory: 256M
          cpus: '0.2'

networks:
  srvthreds-net:
    driver: bridge
    name: srvthreds-net

# volumes:
#   mongo-data-2:
#   mongo-data-3:
  # nginx-session:
  #   # running in host mode because we're not running the node server in a container for demo purposes...
  #   network_mode: host
  #   container_name: nginx-session
  #   hostname: nginx-session
  #   image: nginx:latest
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./.docker/config/nginx-session:/etc/nginx
  #     - ./.docker/config/ssl:/etc/ssl
