{
  "name": "Routing Optimization",
  "id": "routing_optimization",
  "instanceInterval": 0,
  "maxInstances": 0,
  "reactions": [
    {
      "name": "Get past MES programs",
      "condition": {
        "type": "filter",
        "xpr": "$event.type = 'mes.newOperation'",
        "onTrue": {
          "xpr": "$setLocal('first_event', $event)"
        },
        "transform": {
          "eventDataTemplate": {
            "title": "Query Past MES Operations",
            "description": "$xpr( 'Query MES for operation ' & $content.values.mesOpSequence )",
            "content": {
              "values": {
                "tasks": [
                  [
                    {
                      "taskKey": "find_past_ops",
                      "op": "find",
                      "params": {
                        "query": {
                          "type": "MESOperations",
                          "matcher": {
                            "mes_op_sequence": "$xpr( $content.values.mesOpSequence )",
                            "heatlot": "$xpr( $content.values.heatlot )",
                            "percentGood": {
                              "$gte": 90
                            }
                          }
                        }
                      }
                    }
                  ]
                ]
              }
            }
          }
        },
        "publish": {
          "to": ["mes.database"]
        },
        "transition": {
          "name": "$next",
          "input": "forward"
        }
      }
    },
    {
      "name": "Search heat lot in ERP",
      "condition": {
        "type": "filter",
        "xpr": "$event.type = 'mes.newOperation'",
        "transform": {
          "eventDataTemplate": {
            "title": "ERP Query",
            "description": "$xpr( 'Query ERP for heatlot = ' & $content.values.heatlot )",
            "content": {
              "values": {
                "tasks": [
                  [
                    {
                      "taskKey": "find_heatlot",
                      "op": "find",
                      "params": {
                        "query": {
                          "type": "RawMaterial",
                          "matcher": {
                            "heatlot": "$xpr( $content.values.heatlot )"
                          }
                        }
                      }
                    }
                  ]
                ]
              }
            }
          }
        },
        "publish": {
          "to": ["customer.erp"]
        }
      }
    },
    {
      "name": "Send recommendation to operator",
      "condition": {
        "type": "and",
        "operands": [
          {
            "type": "filter",
            "xpr": "$event.type='org.wt.persistence.op'",
            "onTrue": {
              "xpr": "$setLocal('mes_result', $valueNamed('find_past_ops'))"
            }
          },
          {
            "type": "filter",
            "xpr": "$event.type='customer.erp.result'",
            "onTrue": {
              "xpr": "$setLocal('heatlot_result', $valueNamed('find_heatlot')[0])"
            }
          }
        ],
        "transform": {
          "eventDataTemplate": {
            "title": "Operation Recommendations",
            "description": "Pat, we've made some recommendations based on the history of operation you are about to perform.",
            "content": {
              "advice": {
                "eventType": "customer.operator",
                "title": "Operation Recommendations",
                "template": {
                  "name": "operator_recommendations",
                  "interactions": [
                    {
                      "interaction": {
                        "content": [
                          {
                            "text": {
                              "value": "$xpr( 'This heatlot contains ' & $local('heatlot_result').zinc & '% zinc, ' & $local('heatlot_result').iron & '% iron, ' & $local('heatlot_result').lead & '% lead' )"
                            }
                          },
                          {
                            "text": {
                              "value": "$xpr( 'The most successful run for this heat lot had the following settings: \npressure: ' & $local('mes_result')[0].ovr_pressure & ', temp: ' & $local('mes_result')[0].ovr_temp )"
                            }
                          },
                          {
                            "input": {
                              "name": "operator_response",
                              "type": "nominal",
                              "display": "Was this operation successful?"
                            }
                          },
                          {
                            "group": {
                              "items": [
                                {
                                  "value": {
                                    "forInput": "operator_response",
                                    "display": "Yes, the operation was successful",
                                    "set": [true]
                                  }
                                },
                                {
                                  "value": {
                                    "forInput": "operator_response",
                                    "display": "No, the operation failed",
                                    "set": [false]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "publish": {
          "to": ["pat"]
        }
      }
    },
    {
      "condition": {
        "type": "or",
        "operands": [
          {
            "type": "filter",
            "xpr": "$event.type='customer.operator' and $content.values.operator_response"
          },
          {
            "type": "filter",
            "xpr": "$event.type='customer.operator' and $not($content.values.operator_response)"
          }
        ],
        "transform": {
          "eventDataTemplate": {
            "title": "Thanks.",
            "description": "Your response will be logged."
          }
        },
        "publish": {
          "to": ["pat"]
        }
      }
    }
  ]
}
